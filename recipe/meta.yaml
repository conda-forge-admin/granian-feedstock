{% set version = "1.4.1" %}

# handle undefined PYTHON in `noarch: generic` outputs
{% if PYTHON is not defined %}{% set PYTHON = "$PYTHON" %}{% endif %}   # [unix]
{% if PYTHON is not defined %}{% set PYTHON = "%PYTHON%" %}{% endif %}  # [win]

package:
  name: granian
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/g/granian/granian-{{ version }}.tar.gz
  sha256: a087036ba3124d8d8721195becae7503a404f3e17683b2f331355f25062377d6

build:
  skip: true  # [py<38]
  number: 0

outputs:
  - name: granian
    build:
      script:
        - |-
          {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
        - cargo-bundle-licenses --format yaml --output THIRDPARTY.yml
      entry_points:
        - granian = granian:cli.cli
      script_env:
        - RUST_BACKTRACE=1
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("rust") }}
        - {{ stdlib("c") }}
        - cargo-bundle-licenses
        # for the jemalloc-sys crate
        - make   # [linux]
      host:
        - python
        - maturin >=1.1.0,<2
        - pip
      run:
        - python
        - click >=8.0.0
        - uvloop >=0.18.0,<0.19.dev0  # [not win]
        # For OSX rust
    test:
      imports:
        - granian
      commands:
        - pip check
        - granian --help
      requires:
        - pip

  - name: granian-with-pname
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("granian", max_pin="x.x.x") }}
        - setproctitle >=1.3.3,<1.4
    test:
      imports:
        - granian
      commands:
        - pip check
        - granian --help
      requires:
        - pip

  - name: granian-with-reload
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("granian", max_pin="x.x.x") }}
        - watchfiles >=0.21,<0.22
    test:
      imports:
        - granian
      commands:
        - pip check
        - granian --help
      requires:
        - pip

  - name: granian-with-all
    build:
      noarch: generic
    requirements:
      run:
        - {{ pin_subpackage("granian", max_pin="x.x.x") }}
        - {{ pin_subpackage("granian-with-pname", max_pin="x.x.x") }}
        - {{ pin_subpackage("granian-with-reload", max_pin="x.x.x") }}
    test:
      source_files:
        - tests
      imports:
        - granian
      commands:
        - pip check
        - granian --help
        - coverage run --source=granian --branch -m pytest -vv --tb=long --color=yes -k "not (test_rsgi and test_body_stream_req[runtime])"
        - coverage report --show-missing --skip-covered --fail-under=18
      requires:
        - coverage
        - httpx >=0.25.0,<0.26
        - pip
        - pytest >=7.4.2,<7.5
        - pytest-asyncio >=0.21.1,<0.22
        - websockets >=11.0,<12.0

about:
  home: https://github.com/emmett-framework/granian
  summary: A Rust HTTP server for Python applications
  dev_url: https://github.com/emmett-framework/granian
  license: BSD-3-Clause
  license_file:
    - LICENSE
    - THIRDPARTY.yml

extra:
  feedstock-name: granian
  recipe-maintainers:
    - thewchan
    - bollwyvl
